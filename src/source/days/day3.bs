namespace day3

    function getOperationVal(inputOp as string) as integer
        result = -1
        operands = (/\d+/ as roRegex).MatchAll(inputOp)
        operandNums as integer[] = []
        for each operand in operands
            operandNums.push(operand[0].toInt())
        end for
        if inputOp.StartsWith("mul")
            return operandNums[0] * operandNums[1]
        end if
        if inputOp.StartsWith("mul")
            return operandNums[0] * operandNums[1]
        end if
        return result
    end function



    function part1(fileName as string) as integer
        result = 0
        input = files.getInputLines(fileName)
        regex as roRegex = /mul\(\d{1,3},\d{1,3}\)/
        for each line in input
            allMatches = regex.MatchAll(line)

            for each match in allMatches
                operand = match[0]
                value = getOperationVal(operand)
                logger.log([operand, "=", value])
                result += value
            end for
        end for

        return result
    end function

    function part2(fileName as string) as integer
        result = 0
        input = files.getInputLines(fileName)


        doState = true

        regex as roRegex = /(mul\(\d{1,3},\d{1,3}\))|(do\(\))|(don't\(\))/
        for each line in input
            allMatches = regex.MatchAll(line)

            for each match in allMatches
                operand = match[0]
                if operand.StartsWith("do(")
                    doState = true
                    continue for
                else if operand.StartsWith("don't(")
                    doState = false
                    continue for
                end if
                if doState
                    value = getOperationVal(operand)
                    logger.log([operand, "=", value])
                    result += value
                end if
            end for
        end for

        return result
    end function

end namespace
